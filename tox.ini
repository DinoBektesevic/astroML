[tox]
envlist =
    py{36,37,38,39}-test{,-alldeps,-oldestdeps}{,-devastroml}{,-cov}
    codestyle
    build_docs
requires =
    setuptools >= 30.3.0
    pip >= 19.3.1
    tox-pypi-filter >= 0.12
isolated_build = true

[testenv]

# The following option combined with the use of the tox-pypi-filter above allows
# project-wide pinning of dependencies, e.g. if new versions of pytest do not
# work correctly with pytest-astropy plugins. Most of the time the pinnings file
# should be empty.
pypi_filter = https://raw.githubusercontent.com/astropy/ci-helpers/master/pip_pinnings.txt

# Pass through the following environment variables which are needed for the CI
passenv = HOME WINDIR CI

# Run the tests in a temporary directory to make sure that we don't import
# astropy from the source tree
changedir = .tmp/{envname}

description = run tests

deps =
    devastroml: git@github.com:astroML/astroML.git

# TODO: Add more versions to oldestdeps
#    oldestdeps: astropy==3.1

    cov: codecov

extras =
    test
    !py39-alldeps: all_lt_39
    py39-alldeps: all

commands =
    pip freeze
    !cov: pytest {toxinidir}/astroML {posargs}
    cov:  pytest {toxinidir}/astroML --cov {toxinidir}/astroML {posargs}
    cov: coverage xml -o {toxinidir}/coverage.xml

[testenv:codestyle]
changedir = {toxinidir}
skip_install = true
description = check code style
deps = pycodestyle
commands = pycodestyle astroML --count

[testenv:build_docs]
changedir = {toxinidir}
description = Building the narrative and API docs
extras = docs
requires =
    sphinx
commands =
    pip freeze
    python setup.py build_sphinx -W